@using ActionCalculator.Utilities
@using System.Text
@using System.Text.RegularExpressions

<MudItem>
    <MudPaper>
        <h6>Player @(PlayerNumber)</h6>
        <MudText Style="margin:0 3px 0 3px;">@($"Skills: {SkillsString()}")</MudText>
    </MudPaper>
</MudItem>

@code
{
    [Parameter]
    public Player Player { get; set; } = null!;

    [Parameter]
    public int PlayerNumber { get; set; }

    private string SkillsString()
    {
        if (Player.Skills == Skills.None)
        {
            return "None";
        }

        var sb = new StringBuilder();

        foreach (var skill in Player.Skills.ToEnumerable(Skills.None))
        {
            sb.Append($"{GetSkillString(skill)}{GetSkillValue(skill)}, ");
        }

        return sb.Remove(sb.Length - 2, 2).ToString();
    }

    private string GetSkillValue(Skills skill) => skill switch
    {
        Skills.Loner => " " + Player.LonerValue + "+",
        Skills.BreakTackle => " +" + Player.BreakTackleValue,
        Skills.DirtyPlayer => " +" + Player.DirtyPlayerValue,
        Skills.MightyBlow => " +" + Player.MightyBlowValue,
        _ => ""
    };

    private string GetSkillString(Skills skill) => 
        Regex.Replace(skill.ToString(), "([A-Z])", " $1").TrimStart();
}
