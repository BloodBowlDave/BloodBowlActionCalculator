@using System.Text.RegularExpressions
@using ActionCalculator.Utilities
@using System.Linq

<MudPaper Class="player-editor">
    
    <h4>
        Player @(PlayerNumber.ToString())
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small" OnClick="ClearSelected">Clear</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" Size="Size.Small" OnClick="NewPlayer">New</MudButton>
    </h4>
    
        @foreach (var skill in GetSkills())
        {
            var skillText = skill.ToString().PascalCaseToSpaced();
            var canUseSkill = CurrentPlayer.CanUseSkill(skill, Skills.None);

            <MudCheckBox T="bool" 
                         Label="@skillText" 
                         Checked="canUseSkill" 
                         CheckedChanged="() => ToggleSkill(skill, !canUseSkill)"
                         Size="Size.Small"/>
                         
            @if (skill == Skills.Loner)
            {
                <div style="display: @(canUseSkill ? "inline-flex" : "none")">
                    <MudNumericField T="int" Min="2" Max="6" Value="CurrentPlayer.LonerValue" ValueChanged="@LonerChanged"/>
                </div>
            }
            else if (skill == Skills.MightyBlow)
            {
                <div style="display: @(canUseSkill ? "inline-flex" : "none")">
                    <MudNumericField T="int" Min="1" Max="2" Value="CurrentPlayer.MightyBlowValue" ValueChanged="@MightyBlowChanged"/>
                </div>
            }
            else if (skill == Skills.DirtyPlayer)
            {
                <div style="display: @(canUseSkill ? "inline-flex" : "none")">
                    <MudNumericField T="int" Min="1" Max="2" Value="CurrentPlayer.DirtyPlayerValue" ValueChanged="@DirtyPlayerChanged"/>
                </div>
            }
            else if (skill == Skills.BreakTackle)
            {
                <div style="display: @(canUseSkill ? "inline-flex" : "none")">
                    <MudNumericField T="int" Min="1" Max="2" Value="CurrentPlayer.BreakTackleValue" ValueChanged="@BreakTackleChanged"/>
                </div>
            }
        }

</MudPaper>