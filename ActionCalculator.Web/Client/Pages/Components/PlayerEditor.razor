@using System.Text.RegularExpressions
@using ActionCalculator.Utilities

<MudPaper Class="player-editor">
    
    <h4>
        Player @(PlayerNumber.ToString())
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Small" OnClick="ClearSelected">Clear</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" Size="Size.Small" OnClick="NewPlayer">New</MudButton>
        <div style="height: 0; clear: both;"></div>
    </h4>
    
    <MudChipSet MultiSelection="true" Filter="false" @bind-SelectedChips="_selected">
        @foreach (var skill in GetSkills())
        {
            <MudChip
                Text="@(skill.ToString().PascalCaseToSpaced())"
                Variant="Variant.Text"
                Color="Color.Default"
                SelectedColor="Color.Primary"
                Size="Size.Small"
                OnClick="PlayerChanged">
            </MudChip>

            @if (skill == Skills.Loner)
            {
                <div style="display: @(!SkillIsSelected("Loner") ? "none" : "inline-flex")">
                    <MudNumericField T="int" Min="2" Max="6" Value="_lonerValue" ValueChanged="@(LonerChanged)"/>
                </div>
            }
            else if (skill == Skills.MightyBlow)
            {
                <div style="display: @(!SkillIsSelected("Mighty Blow") ? "none" : "inline-flex")">
                    <MudNumericField T="int" Min="1" Max="2" Value="_mightyBlowValue" ValueChanged="@(MightyBlowChanged)"/>
                </div>
            }
            else if (skill == Skills.DirtyPlayer)
            {
                <div style="display: @(!SkillIsSelected("Dirty Player") ? "none" : "inline-flex")">
                    <MudNumericField T="int" Min="1" Max="2" Value="_dirtyPlayerValue" ValueChanged="@(DirtyPlayerChanged)"/>
                </div>
            }
            else if (skill == Skills.BreakTackle)
            {
                <div style="display: @(!SkillIsSelected("Break Tackle") ? "none" : "inline-flex")">
                    <MudNumericField T="int" Min="1" Max="2" Value="_breakTackleValue" ValueChanged="@(BreakTackleChanged)"/>
                </div>
            }
        }
    </MudChipSet>

</MudPaper>